package hexlet.code.games.util.engine.gamerounddata;

import org.jetbrains.annotations.NotNull;

/**
 * Интерфейс класса, содержащего данные для проведения одного
 * раунда игры.
 */
public interface GameRoundData {

    /**
     * Получить вопрос.
     * <p>
     * Может быть и числом (строковым представлением числа). Например, в игре на
     * нахождение четности {@link hexlet.code.games.paritychecker.ParityChecker}.
     *
     * @return Вопрос.
     */
    String getQuestion();

    /**
     * Получить правильный ответ в виде строки. Используется
     * для демонстрации сообщения в случае некорректного ответа,
     * но не используется для проверки правильности, т.к. правильный
     * ответ может не быть строкой.
     * <p>
     * Т.к. идентифицирует, что должен был ввести пользователь, чтобы ответ
     * считался правильным.
     *
     * @return Правильный ответ.
     */
    String getCorrectAnswer();

    /**
     * Определить, является ли переданный строковый ответ правильным. Т.к.
     * правильный ответ не всегда является строкой, определение корректности
     * нельзя производить через сравнение с {@link #getCorrectAnswer()}.
     * <p>
     * Скорее всего является результатом вызова предиката.
     *
     * @param answer Пользовательский ответ.
     * @return Является ли переданная строка правильным ответом.
     */
    boolean defineIsCorrect(@NotNull String answer);

}
